# SmartLock Tuya - Arquivo de Variáveis de Ambiente (.env)
# ============================================================
# ⚠️ SEGURANÇA: NUNCA comite este arquivo em produção!
# ⚠️ Copie este arquivo para .env e preencha com suas credenciais
# ⚠️ Adicione .env ao .gitignore
# 
# Gerado em: PASSO 18 - Segurança e LGPD
# Última atualização: 15/01/2024

# ============================================================
# 1. AMBIENTE (OBRIGATÓRIO)
# ============================================================
# Ambiente de execução: development, staging, production
NODE_ENV=development

# Porta para o servidor Express
PORT=3000

# Nível de log: debug, info, warn, error, critical
LOG_LEVEL=info

# ============================================================
# 2. AUTENTICAÇÃO E SEGURANÇA (OBRIGATÓRIO)
# ============================================================
# Gere chaves seguras com: openssl rand -base64 32

# JWT Secret para assinatura de tokens
# - Mínimo 32 caracteres
# - Use caracteres aleatórios e seguros
# - Diferentes para dev/prod
# Gerador: https://randomkeygen.com/
JWT_SECRET=gerar_uma_chave_aleatoria_segura_com_minimo_32_caracteres

# Expiração do JWT (ex: 7d, 24h, 1h)
JWT_EXPIRES_IN=7d

# Session Secret para express-session
# - Mínimo 32 caracteres
# - Use caracteres aleatórios e seguros
# - NUNCA reutilize JWT_SECRET
SESSION_SECRET=gerar_outra_chave_aleatoria_segura_para_sessoes

# ============================================================
# 3. DATABASE - PostgreSQL (OBRIGATÓRIO)
# ============================================================
# URL de conexão do PostgreSQL (formato Prisma)
# Formato: postgresql://user:password@host:port/database?schema=public
DATABASE_URL=postgresql://tuya_admin:sua_senha_segura@localhost:5432/tuya_locks_db?schema=public

# Alternativa: Configuração individual (legado)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=tuya_locks_db
DB_USER=tuya_admin
DB_PASSWORD=sua_senha_segura

# ============================================================
# 4. CACHE - Redis (OBRIGATÓRIO)
# ============================================================
# URL de conexão do Redis
# Formato: redis://[:password@]host:port
REDIS_URL=redis://localhost:6379

# Alternativa: Configuração individual
REDIS_HOST=localhost
REDIS_PORT=6379
# REDIS_PASSWORD=sua_senha_redis_opcional

# ============================================================
# 5. TUYA CLOUD API (OBRIGATÓRIO em produção)
# ============================================================
# Obtenha estas credenciais em: https://iot.tuya.com/
# ⚠️ CRÍTICO: Não compartilhe estas credenciais

# Client ID da aplicação Tuya
TUYA_CLIENT_ID=seu_client_id_aqui

# Client Secret da aplicação Tuya (CONFIDENCIAL)
# - Nunca compartilhe este valor
# - Revogue em https://iot.tuya.com/ se exposto
TUYA_CLIENT_SECRET=seu_client_secret_aqui

# Host regional da API Tuya
# Opções:
# - openapi.tuyaus.com (América do Norte)
# - openapi.tuyaeu.com (Europa)
# - openapi.tuyacn.com (China)
# - openapi.tuyain.com (Índia)
TUYA_REGION_HOST=openapi.tuyaus.com

# ============================================================
# 6. STAYS PLATFORM API (OBRIGATÓRIO em produção)
# ============================================================
# Obtenha em: https://staysapp.com/developers

# Client ID para API Stays
STAYS_CLIENT_ID=seu-client-id-stays

# Client Secret para API Stays (CONFIDENCIAL)
# - Nunca compartilhe este valor
# - Revogue se exposto
STAYS_CLIENT_SECRET=seu-client-secret-stays-muito-seguro

# URL base da API Stays
STAYS_API_URL=https://api.staysapp.com/v1

# Secret para validação de webhooks Stays (HMAC-SHA256)
# Gere com: openssl rand -base64 32
STAYS_WEBHOOK_SECRET=sua-chave-secreta-para-validar-webhooks-stays

# Modo mock para desenvolvimento (true/false)
# - true: Simula respostas da API Stays
# - false: Faz requisições reais para Stays
MOCK_STAYS_API=false

# ============================================================
# 7. CONFIGURAÇÃO DE SERVIDOR (OBRIGATÓRIO)
# ============================================================
# URL pública da aplicação
# Exemplo de desenvolvimento: http://localhost:3000
# Exemplo de produção: https://seu_dominio.com
APP_URL=http://localhost:3000

# ============================================================
# 8. EMAIL (OBRIGATÓRIO para recuperação de senha)
# ============================================================
# Serviço de email: smtp, gmail, sendgrid
EMAIL_SERVICE=smtp

# Para SMTP genérico:
EMAIL_HOST=smtp.hostinger.com
EMAIL_PORT=465
EMAIL_SECURE=true
EMAIL_USER=seu_email@dominio.com
EMAIL_PASSWORD=sua_senha_email_aqui

# Para Gmail:
# EMAIL_SERVICE=gmail
# EMAIL_USER=seu_email@gmail.com
# EMAIL_PASSWORD=sua_senha_app_aqui_nao_a_senha_conta

# ============================================================
# 9. FINALIZANDO - CHECKLIST DE SEGURANÇA
# ============================================================
# Antes de implantar em PRODUÇÃO, verifique:
#
# ✅ SEGURANÇA - Senhas:
#    [ ] JWT_SECRET gerado com 32+ caracteres aleatórios
#    [ ] SESSION_SECRET gerado com 32+ caracteres aleatórios
#    [ ] Ambas as senhas são DIFERENTES uma da outra
#    [ ] NODE_ENV definido como 'production'
#
# ✅ DATABASE:
#    [ ] DATABASE_URL conecta a um servidor PostgreSQL remoto
#    [ ] Usuário do BD tem privilégios mínimos necessários
#    [ ] Porta do BD não é exposta na internet
#
# ✅ CACHE (Redis):
#    [ ] REDIS_URL conecta a um servidor Redis seguro
#    [ ] Redis tem autenticação habilitada (REDIS_PASSWORD)
#    [ ] Redis não é acessível de fora da rede privada
#
# ✅ API KEYS:
#    [ ] TUYA_CLIENT_SECRET nunca está em logs
#    [ ] STAYS_CLIENT_SECRET nunca está em logs
#    [ ] Todas as chaves estão em .env (não no código)
#
# ✅ EMAIL:
#    [ ] EMAIL_PASSWORD é senha de app (não senha da conta)
#    [ ] EMAIL_USER é verificado e funcional
#
# ✅ URLS:
#    [ ] APP_URL é HTTPS em produção
#    [ ] APP_URL não contém credenciais
#
# ✅ VARIÁVEIS DE TESTE:
#    [ ] MOCK_STAYS_API é 'false' em produção
#    [ ] LOG_LEVEL é 'info' ou 'warn' em produção
#    [ ] NODE_ENV é 'production' em produção
#
# ============================================================
# 10. VARIÁVEIS OPCIONAIS
# ============================================================
# Timeout padrão para requisições (em ms)
# REQUEST_TIMEOUT=10000

# Número máximo de tentativas de retry
# MAX_RETRIES=3

# Habilitar debug detalhado (true/false)
# DEBUG=false

# Periodo de retenção de logs (em dias)
# LOG_RETENTION_DAYS=30

# ============================================================
# 11. LOCKS DE TESTE (OPCIONAL)
# ============================================================
# Para desenvolvimento, você pode configurar locks de teste
# Obtenha os Device IDs em https://iot.tuya.com/

# LOCK_1_ID=seu_device_id_1
# LOCK_1_NAME=Fechadura de Teste 1
# LOCK_1_LOCATION=Sala 101

# LOCK_2_ID=seu_device_id_2
# LOCK_2_NAME=Fechadura de Teste 2
# LOCK_2_LOCATION=Sala 102

# ============================================================
# 12. CONFORMIDADE LGPD
# ============================================================
# Período de retenção de logs (em dias)
# Padrão: 30 dias conforme LGPD
LOG_RETENTION_DAYS=30

# Período de caução para exclusão de conta (em dias)
# Padrão: 30 dias - permite reversão de exclusão
ACCOUNT_DELETION_GRACE_PERIOD_DAYS=30

# ============================================================
# INSTRUÇÕES FINAIS
# ============================================================
#
# 1. Copie este arquivo para .env:
#    $ cp .env.example .env
#
# 2. Edite .env com suas credenciais reais:
#    $ nano .env  (ou seu editor favorito)
#
# 3. Adicione .env ao .gitignore:
#    $ echo ".env" >> .gitignore
#    $ echo ".env.local" >> .gitignore
#
# 4. Teste as conexões:
#    $ npm run verify-env
#
# 5. Inicie a aplicação:
#    $ npm run dev  (desenvolvimento)
#    $ npm start    (produção)
#
# ============================================================
# SUPORTE E DOCUMENTAÇÃO
# ============================================================
# - Documentação LGPD: md/LGPD.md
# - Variáveis de Ambiente: docs/ENVIRONMENT.md
# - Segurança: src/lib/encryption.ts, src/lib/logger.ts
# - Autenticação: src/app/api/middleware/auth.ts
# ============================================================
